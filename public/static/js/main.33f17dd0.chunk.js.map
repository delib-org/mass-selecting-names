{"version":3,"sources":["view/components/nav/Nav.js","control/firebase.js","control/general.js","view/pages/AddingNames/AddingNames.js","view/pages/SelectNames/Card.js","view/pages/SelectNames/Series.js","view/components/nav/Spinner.js","view/pages/SelectNames/SelectNames.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","pathname","useLocation","console","log","href","className","target","rel","to","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","DB","firestore","simpleName","name","replace","lastNumber","foundNames","Set","ref","collection","doc","AddingNames","useState","names","setNames","useEffect","orderBy","limit","onSnapshot","namesDB","forEach","nameDB","data","number","length","map","nameElm","index","key","autoComplete","onSubmit","e","preventDefault","elements","newname","value","searchString","userName","prompt","setUserName","includes","add","time","Date","getTime","then","docDB","set","maxNumber","alert","type","required","placeholder","onKeyUp","shortName","searchConstrain","lastLetter","slice","c","String","fromCharCode","charCodeAt","nameUp","start","end","searchTermStartEnd","dir","where","get","tempNames","Card","isNew","onClick","seriesIndex","selectedNames","selected","undefined","unselected","couple","id","getRandomNames","selectName","Series","series","Spinner","SelectNames","isSpinner","setIsSpinner","numberDB","randomNames","i","size","Math","ceil","random","rndNumbers","namesArr","rndNumber","tempNameObj","push","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.33f17dd0.chunk.js","sourcesContent":["\n\nimport React from 'react';\nimport './Nav.css';\n\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router\";\n\nfunction Nav(props) {\n    let { pathname } = useLocation();\n    console.log(pathname)\n    return (\n        <nav>\n\n            <a href='http://delib.org/he' className='navButton' target='_blank' rel=\"noopener noreferrer\">Delib.org</a>\n\n            <Link to=\"/add\">\n                <div className={(pathname === '/add' || pathname === '/') ? 'navButton navButtonSelected' : 'navButton'}>\n                    \n                    <i className=\"material-icons\">\n                        add_circle\n                    </i>\n                    הוספת שמות\n                </div>\n            </Link>\n\n\n            <Link to=\"/vote\">\n                <div className={(pathname === '/vote') ? 'navButton navButtonSelected' : 'navButton'}>\n                   \n                    <i className=\"material-icons\">\n                        check_circle\n                    </i> \n                    בחירת שמות   \n                </div>\n            </Link>\n\n        </nav>\n    )\n}\n\nexport default Nav;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst config = {\n\tapiKey: 'AIzaSyD82XZxw9S90yrFl0PB5ibxy9MZv1GncH4',\n\tauthDomain: 'mass-names.firebaseapp.com',\n\tdatabaseURL: 'https://mass-names.firebaseio.com',\n\tprojectId: 'mass-names',\n\tstorageBucket: 'mass-names.appspot.com',\n\tmessagingSenderId: '990355098057',\n\tappId: '1:990355098057:web:af50ce9fd2aaf0d2e10018',\n\tmeasurementId: 'G-GW6NL7QXD5'\n};\n\nfirebase.initializeApp(config);\n\nconst DB = firebase.firestore();\n\nexport default DB;\n","export function simpleName(name){\n    let simpleName = name.replace(/ו/g,'');\n    simpleName = simpleName.replace(/ה/g,'');\n    simpleName = simpleName.replace(/י/g,'');\n    simpleName = simpleName.replace(/א/g,'');\n    simpleName = simpleName.replace(/ /g,'');\n\n    return simpleName;\n}","import React, { useState, useEffect } from 'react';\nimport './AddingNames.css';\n\n//control\nimport DB from '../../../control/firebase';\nimport { simpleName } from '../../../control/general';\n\nlet lastNumber = 0;\nlet foundNames = new Set();\nlet ref = DB.collection('groups').doc('0nWDzSq0oFoqBXTQJJ6w')\n    .collection('questions').doc('AhNnQ5GMhN3xMCFYwQp9')\n    .collection('subQuestions').doc('79awrIGoQqrJVmo7p0LO')\n\nfunction AddingNames(props) {\n\n    const [names, setNames] = useState([]);\n\n    useEffect(() => {\n\n        ref.collection('options').orderBy('time', 'desc').limit(1).onSnapshot(namesDB => {\n            namesDB.forEach(nameDB => {\n            \n                \n                lastNumber = nameDB.data().number || 0;\n            })\n        },doc=>{console.log(doc)})\n    }, [])\n\n\n    function addName(e) {\n        e.preventDefault();\n        const name = e.target.elements.newname.value;\n        const searchString = simpleName(name);\n\n        if (!props.userName) {\n            var userName = prompt('אנא ציינו את שמכם  כדי נידע מי הציע')\n            props.setUserName(userName);\n        }\n\n        //check if the name allready in database\n        if(names.includes(name)){\n            console.log('all ready here!!!!!!!');\n            return;\n        }\n\n        e.target.elements.newname.value = '';\n\n\n\n        console.log(name, searchString)\n\n        ref.collection('options').add({\n            userName: userName || props.userName,\n            name,\n            searchString,\n            time: new Date().getTime(),\n            number: lastNumber + 1\n        }).then(docDB => {\n            ref.collection('maxNumber').doc('maxNumber')\n                .set({ maxNumber: lastNumber })\n\n            alert('השם שרשמתם הוסף בהצלחה, ומחכה לדרוג על ידי תושבים אחרים')\n        })\n    }\n\n    function searchName(e) {\n        let name = e.target.value;\n\n\n        if (name.length > 2) {\n            let shortName = simpleName(name);\n\n            let searchConstrain = searchTermStartEnd(shortName);\n            console.dir(searchConstrain)\n            ref.collection('options').where(\"searchString\", \"==\", shortName)\n                .where(\"searchString\", \">=\", searchConstrain.start)\n                .where(\"searchString\", \"<=\", searchConstrain.end)\n                .limit(6)\n                .get()\n                .then(namesDB => {\n\n                    namesDB.forEach(nameDB => {\n                        console.log(nameDB.data())\n                        foundNames.add(nameDB.data().name);\n                        let tempNames = [...foundNames];\n                        console.dir(tempNames)\n                        setNames(tempNames.slice(-5))\n                    })\n                })\n        }\n    }\n\n    return (\n        <div className='page'>\n            <div className='addMessage'>\n                אנא הוסיפו שמות חדשים לשכונות הקרוואנים\n            </div>\n            <div className='bottomBox'>\n                <div className='foundNames'>\n                    {names.length > 0 ? <div>שמות דומים</div> : <div />}\n                    {\n                        names.map((nameElm, index) => {\n                            return (<div className='foundName' key={index}>{nameElm}</div>)\n                        })\n                    }\n                </div>\n                <form autoComplete=\"off\" onSubmit={addName}>\n\n                    <input type='text' name='newname' required placeholder='הוסיפו שם חדש' onKeyUp={searchName} />\n                    <input type='submit' value='הוספה' />\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default AddingNames;\n\nfunction searchTermStartEnd(name) {\n    let lastLetter = name.slice(-1);\n    lastLetter = nextChar(lastLetter);\n    let nameUp = name.slice(0, -1) + lastLetter;\n    return { start: name, end: nameUp };\n}\n\nfunction nextChar(c) {\n    return String.fromCharCode(c.charCodeAt(0) + 1);\n}","import React, {useState} from 'react';\nimport './SelectNames.css';\nimport DB from '../../../control/firebase';\n\n\nfunction Card(props) {\n\n    const [selected, setSelected] = useState(false);\n\n    function selectName() {\n\n        // setSelected(true)\n        \n        const selectedNames = { selected: undefined, unselected: undefined };\n        \n        let names = [...props.names];\n        \n        \n        //change to who is slelected\n        selectedNames.selected = props.name;\n        names[props.seriesIndex][0].isNew = false;\n         names[props.seriesIndex][1].isNew = false;\n        \n        if (props.number === 0) {           \n            names[props.seriesIndex][0].selected = true\n            names[props.seriesIndex][1].selected = false\n\n            selectedNames.unselected = props.couple[1]\n            \n        } else {           \n             names[props.seriesIndex][1].selected = true\n            names[props.seriesIndex][0].selected = false\n            \n            selectedNames.unselected = props.couple[0]\n        }\n\n        props.setNames(names);\n\n       \n\n        DB.collection('groups')\n            .doc('0nWDzSq0oFoqBXTQJJ6w')\n            .collection('questions')\n            .doc('AhNnQ5GMhN3xMCFYwQp9')\n            .collection('subQuestions')\n            .doc('79awrIGoQqrJVmo7p0LO')\n            .collection('selections')\n            .add(selectedNames)\n            .then(doc => {\n                console.log('update to db', doc.id);\n                props.getRandomNames();\n\n            })\n\t}\n\n\treturn (\n        <div className={props.name.isNew?\"new nameSelect\":'nameSelect'} onClick={(e)=>{\n            if(props.seriesIndex === 0){selectName()}\n            }}>\n\t\t\t<div>{props.name.name}</div>\n\t\t\t<div />\n\t\t\t<div />\n\t\t\t<div>\n                {!props.name.selected ? <div /> : <i className=\"material-icons\">check_circle</i>}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Card;\n","import React from 'react';\nimport './SelectNames.css';\n\n//component\nimport Card from './Card';\n\n\nfunction Series(props) {\n     \n    return (\n        <div className='namesSelect'>\n            {\n                props.series.map((name, index) => {\n                   \n                    return (\n                        <Card key={index} number={index} seriesIndex={props.seriesIndex} name={name} names={props.names} setNames={props.setNames} couple={props.series} getRandomNames={props.getRandomNames} />\n                    )\n                })\n            }\n        </div>\n    )\n}\nexport default Series;","import React from \"react\";\nimport './Spinner.css'\n\nfunction Spinner() {\n    return (\n        <div className=\"lds-ring\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    )\n\n}\n\nexport default Spinner;","import React, { useState, useEffect } from 'react';\nimport './SelectNames.css';\n\n//components\nimport Series from './Series';\nimport Spinner from '../../components/nav/Spinner';\n\n//control\nimport DB from '../../../control/firebase';\n\nfunction SelectNames(props) {\n\tconst [names, setNames] = useState([]);\n\tconst [isSpinner, setIsSpinner] = useState(false);\n\n\tuseEffect(() => {\n\t\tgetRandomNames();\n\t}, [])\n\n\tfunction getRandomNames(e) {\n\t\tsetIsSpinner(true)\n\t\tlet maxNumber;\n\t\tlet resultsNumber = 2;\n\t\tlet ref = DB.collection('groups')\n\t\t\t.doc('0nWDzSq0oFoqBXTQJJ6w')\n\t\t\t.collection('questions')\n\t\t\t.doc('AhNnQ5GMhN3xMCFYwQp9')\n\t\t\t.collection('subQuestions')\n\t\t\t.doc('79awrIGoQqrJVmo7p0LO');\n\n\t\tref.collection('maxNumber').doc('maxNumber').get().then((numberDB) => {\n\t\t\tmaxNumber = numberDB.data().maxNumber || 0;\n\n\t\t\tlet randomNames = new Set();\n\t\t\tlet i = 0;\n\t\t\twhile (randomNames.size < resultsNumber && i < 20) {\n\t\t\t\trandomNames.add(Math.ceil(Math.random() * maxNumber));\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tlet rndNumbers = [...randomNames];\n\t\t\tlet namesArr = [];\n\n\t\t\trndNumbers.forEach((rndNumber) => {\n\t\t\t\tref.collection('options').where('number', '==', rndNumber).limit(1).get().then((namesDB) => {\n\t\t\t\t\tnamesDB.forEach((nameDB) => {\n\t\t\t\t\t\tlet tempNameObj = nameDB.data();\n\t\t\t\t\t\ttempNameObj.id = nameDB.id;\n\t\t\t\t\t\ttempNameObj.isNew = true;\n\t\t\t\t\t\tnamesArr.push(tempNameObj);\n\n\n\t\t\t\t\t\t//update to dom, after all calls from DB returend\n\t\t\t\t\t\tif (namesArr.length === resultsNumber) {\n\t\t\t\t\t\t\tsetIsSpinner(false)\n\t\t\t\t\t\t\tsetNames([namesArr, ...names]);\n\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\treturn (\n\t\t<div className=\"page\">\n\n\t\t\t<div className=\"questionTitle\">איזה מהשמות עדיף?</div>\n\t\t\t\n\t\t\t\t<div className=\"\">\n\t\t\t\t\t{isSpinner ?<Spinner />:<div />}\n\t\t\t\t\t{names.map((series, index) => {\n\t\t\t\t\t\treturn <Series series={series} key={index} seriesIndex={index} getRandomNames={getRandomNames} names={names} setNames={setNames} />;\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t\n\t\t</div>\n\t);\n}\n\nexport default SelectNames;\n","import React, { useState } from 'react';\nimport './App.css';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\n//components\nimport Nav from './view/components/nav/Nav';\n//pages\nimport AddingNames from './view/pages/AddingNames/AddingNames';\nimport SelectNames from './view/pages/SelectNames/SelectNames';\n\nfunction App(props) {\n  console.dir(props)\n  const[userName, setUserName] = useState(false);\n\n  return (\n    <Router>\n      <div className='app'>\n        <Nav />\n        <Switch>\n        <Route exact path=\"/\">\n            <AddingNames  setUserName={setUserName} userName={userName}/>\n          </Route>\n          <Route path=\"/add\">\n            <AddingNames  setUserName={setUserName} userName={userName}/>\n          </Route>\n          <Route path=\"/vote\">\n            <SelectNames />\n          </Route>\n\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}